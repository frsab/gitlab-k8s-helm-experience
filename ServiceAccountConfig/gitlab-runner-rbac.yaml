# Définition du ServiceAccount dans le namespace gitlab-runner
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner
  namespace: gitlab-runner
---
# Définition du rôle (Role) dans le namespace gitlab-runner
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: gitlab-runner  
  name: gitlab-runner-role  
rules:
  - apiGroups: [""]
    # apiGroups: "" fait référence à l'API de base de Kubernetes (pas une API personnalisée)
    #resources: ["secrets"]
    #resources: ["pods", "pods/exec", "pods/log", "services", "configmaps", "secrets","persistentvolumeclaims"]             
    resources: ["pods", "pods/exec", "pods/log", "pods/attach", "services", "configmaps", "secrets","persistentvolumeclaims"]             
    verbs:  ["get", "list", "create", "delete", "patch", "update"]

---
# Définition de lier ce rôle à un service account spécifique
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-runner-role-binding  # Nom de l'association entre le rôle et le service account
  namespace: gitlab-runner          # Namespace où ce binding sera appliqué
subjects:
  # Liste des sujets (utilisateurs, groupes ou service accounts) auxquels ce rôle sera appliqué
  - kind: ServiceAccount            # Le type de sujet ici est un service account
    name: gitlab-runner             # Nom du service account que GitLab Runner utilisera
    namespace: gitlab-runner        # Namespace où ce service account existe
roleRef:
  # Cette section indique quel rôle (Role) est attribué au service account
  kind: Role                        # Nous faisons référence à un "Role", pas un "ClusterRole"
  name: gitlab-runner-role          # Nom du rôle que nous avons défini précédemment
  apiGroup: rbac.authorization.k8s.io  # Le groupe API pour les rôles RBAC
